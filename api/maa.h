/*
 * Author: Brendan Le Foll
 *
 * Copyright Â© 2014 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

#pragma once

/** @file
 *
 * This file defines the basic shared values for libmaa
 *
 */

#ifdef __cplusplus
extern "C" {
#endif

typedef enum {
    MAA_SUCCESS                              =  0,
    MAA_ERROR_FEATURE_NOT_IMPLEMENTED        =  1,
    MAA_ERROR_FEATURE_NOT_SUPPORTED          =  2,
    MAA_ERROR_INVALID_VERBOSITY_LEVEL        =  3,
    MAA_ERROR_INVALID_PARAMETER              =  4,
    MAA_ERROR_INVALID_HANDLE                 =  5,
    MAA_ERROR_NO_RESOURCES                   =  6,
    MAA_ERROR_INVALID_RESOURCE               =  7,
    MAA_ERROR_INVALID_QUEUE_TYPE             =  8,
    MAA_ERROR_NO_DATA_AVAILABLE              =  9,

    MAA_ERROR_UNSPECIFIED                    = 99
} maa_result_t;

/** Get the version string of maa autogenerated from git tag
 *
 * The version returned may not be what is expected however it is a reliable
 * number associated with the git tag closest to that version at build time
 * @return version string from version.h
 */
const char* maa_get_version();

#ifdef __cplusplus
}
#endif
